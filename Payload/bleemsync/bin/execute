#!/bin/sh
###############################################################################
# BleemSync Bootstapper executor v0.7
# ModMyClassic.com / https://discordapp.com/invite/8gygsrw
###############################################################################

### LOAD CONFIGURATION ########################################################
ini_file="/media/bleemsync/etc/bleemsync/CFG/bleemsync_cfg.INI"
cfg_file="/var/volatile/bleemsync.cfg"

rm -f "$cfg_file"
grep -v -e "^;" -e "^\[" "$ini_file" > "$cfg_file"

if [ -f "$cfg_file" ]; then
  source "$cfg_file"
else
  echo "wtf" #Add a proper error at some point here...
fi

source "${bleemsync_path}/etc/bleemsync/CFG/boot_sequence.cfg"

# Set up logging
if [ "$runtime_log" = "1" ]; then
  error_log="$runtime_log_path/bleemsync.log"
else
  error_log="/dev/stdout"
fi

### LOAD FUNCTION LIBRARIES ###################################################												  
for funcs in /media/bleemsync/etc/bleemsync/FUNC/*.funcs; do source "$funcs"; done

### EXECUTE ###################################################################
main(){
  for x in "${boot_sequence[@]}"; do
    echo "[BLEEMSYNC](BOOT) booting "$x"_func()" >> "${error_log}"
    time1=$(date +%s%N)
    if [ ! -z $(echo "$x" | grep "^dump_") ] && [ "$force_redump" = "1" ]; then
      $x"_func" --force >> "${error_log}" 2>&1
    else
      $x"_func" >> "${error_log}" 2>&1
    fi
    time2=$(date +%s%N)
    echo "[BLEEMSYNC](PROFILE) "$x"_func() took: $(((time1-time2)/1000000))ms to execute" >> "${error_log}"
  done 
}

###############################################################################
main #Do stuff and things

#If we get here... Panic and Reboot
sync
reboot
exit 1
